{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/zdog/js/boilerplate.js","webpack:///../node_modules/zdog/js/anchor.js","webpack:///../node_modules/zdog/js/shape.js","webpack:///../node_modules/zdog/js/vector.js","webpack:///../node_modules/zdog/js/index.js","webpack:///../node_modules/zdog/js/path-command.js","webpack:///../node_modules/zdog/js/ellipse.js","webpack:///../node_modules/zdog/js/canvas-renderer.js","webpack:///../node_modules/zdog/js/svg-renderer.js","webpack:///../node_modules/zdog/js/dragger.js","webpack:///../node_modules/zdog/js/group.js","webpack:///../node_modules/zdog/js/rect.js","webpack:///../node_modules/zdog/js/illustration.js","webpack:///../node_modules/zdog/js/rounded-rect.js","webpack:///../node_modules/zdog/js/polygon.js","webpack:///../node_modules/zdog/js/hemisphere.js","webpack:///../node_modules/zdog/js/cylinder.js","webpack:///../node_modules/zdog/js/cone.js","webpack:///../node_modules/zdog/js/box.js","webpack:///./globals.ts","webpack:///./life.ts","webpack:///./main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","factory","Zdog","this","TAU","Math","PI","extend","a","b","prop","lerp","alpha","modulo","num","div","powerMultipliers","2","3","4","5","easeInOut","power","isFirstHalf","max","min","slope","curve","Anchor","Vector","CanvasRenderer","SvgRenderer","utils","onePoint","x","y","z","options","children","constructor","defaults","setOptions","translate","rotate","scale","multiply","origin","renderOrigin","addTo","addChild","optionKeys","keys","concat","indexOf","shape","remove","push","removeChild","index","splice","update","reset","forEach","child","transform","set","translation","rotation","updateGraph","updateFlatGraph","flatGraph","item","updateSortValue","sort","shapeSorter","sortValue","_flatGraph","graph","getFlatGraph","addChildFlatGraph","childFlatGraph","Array","apply","render","renderGraphCanvas","ctx","Error","renderGraphSvg","svg","copy","itemOptions","ItemClass","copyGraph","clone","normalizeRotate","subclass","getSubclass","Super","Item","slice","Shape","PathCommand","stroke","fill","color","closed","visible","path","front","backface","updatePath","renderFront","renderNormal","actionNames","setPath","updatePathCommands","previousPoint","pathCommands","map","pathPart","method","points","length","isLineOrMove","isPointsArray","isArray","command","endRenderPoint","subtract","pointCount","firstPoint","lastPoint","isSame","sortValueTotal","renderer","isFacingBack","isDot","isCanvas","renderCanvasDot","renderPath","lineWidth","getLineWidth","fillStyle","getRenderColor","point","beginPath","radius","arc","elem","getRenderElement","isClosed","end","isSvg","svgElement","document","createElementNS","setAttribute","position","rotateProperty","vec","angle","propA","propB","cos","sin","getMagnitudeSqrt","sum","abs","sqrt","pos","write","undefined","rotateZ","rotateY","rotateX","add","magnitude","magnitude2d","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Dragger","Illustration","Group","Rect","RoundedRect","Ellipse","Polygon","Hemisphere","Cylinder","Cone","Box","mapVectorPoint","renderPoints","mapNewVector","controlPoints","renderPoint","move","line","bezier","cp0","cp1","prev","corner","diameter","width","height","quarters","begin","moveTo","lineTo","bezierCurveTo","closePath","isStroke","strokeStyle","isFill","round","getPointString","pathValue","fillColor","appendChild","window","downEvent","moveEvent","upEvent","noop","PointerEvent","onDragStart","onDragMove","onDragEnd","bindDrag","startElement","element","getQueryElement","style","touchAction","addEventListener","querySelector","handleEvent","event","type","onmousedown","onpointerdown","dragStart","ontouchstart","changedTouches","pointer","preventDefault","dragStartX","pageX","dragStartY","pageY","ontouchmove","dragMove","onmousemove","onpointermove","moveX","moveY","onmouseup","onpointerup","ontouchend","dragEnd","removeEventListener","updateSort","centered","zoom","dragRotate","resize","onPrerender","onResize","setElement","setDragRotate","setResize","nodeName","toLowerCase","setCanvas","setSvg","setSize","setSizeCanvas","setSizeSvg","resizeListener","onWindowResize","setMeasuredSize","innerWidth","innerHeight","rect","getBoundingClientRect","renderGraph","updateRenderGraph","getContext","pixelRatio","devicePixelRatio","canvasWidth","canvasHeight","prerenderCanvas","postrenderCanvas","lineCap","lineJoin","clearRect","save","centerX","centerY","restore","getAttribute","viewWidth","viewHeight","viewX","viewY","removeAttribute","firstChild","empty","dragStartRX","dragStartRY","arguments","displaySize","moveRY","moveRX","cornerRadius","xA","yA","shortSide","xB","yB","sides","theta","apex","renderCentroid","renderDome","getDomeRenderElement","contourAngle","atan2","domeRadius","startAngle","endAngle","domeSvgElement","CylinderGroup","renderCylinderSurface","frontBase","rearBase","strokeWidth","frontFace","group","baseZ","baseColor","_prop","renderApex","tangentA","tangentB","surfacePathCommands","renderConeSurface","apexDistance","normalDistance","eccenAngle","acos","eccen","apexAngle","projectLength","projectAngle","setSurfaceRenderPoint","getSurfaceRenderElement","surfaceSvgElement","BoxRect","faceNames","boxDefaults","faceName","depth","_faceName","setFace","rectProperty","getFaceOptions","rearFace","leftFace","rightFace","topFace","bottomFace","isFaceColor","globals","gridWidth","squareWidth","squareDist","nLayers","layerWidth","animScale","updateRate","paused","frameNum","neighbors","life","_this","repopulate","populationAmt","random","j","val","rows","newRows","_loop_1","newRow","_loop_2","neighborsAlive","nbr","di","dj","curVal","row","canvas","getElementById","body","clientWidth","clientHeight","illo","js","getRectColorByCellValue","cellValue","getRectSizeByLayer","layer","createSquareGrid","squares","anchor","recenter","square","main_layers","main_i","main_life","updateFirstLayer","firstLayer","cellVal","updateLayers","shiftLayersUp","prevFrame","animate","now","Date","requestAnimationFrame","onclick","pauseButton","textContent"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/*!\n * Zdog v1.1.0\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2019 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n}( this, function factory() {\n\nvar Zdog = {};\n\nZdog.TAU = Math.PI * 2;\n\nZdog.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\nZdog.lerp = function( a, b, alpha ) {\n  return ( b - a ) * alpha + a;\n};\n\nZdog.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\nvar powerMultipliers = {\n  2: function( a ) {\n    return a * a;\n  },\n  3: function( a ) {\n    return a * a * a;\n  },\n  4: function( a ) {\n    return a * a * a * a;\n  },\n  5: function( a ) {\n    return a * a * a * a * a;\n  },\n};\n\nZdog.easeInOut = function( alpha, power ) {\n  if ( power == 1 ) {\n    return alpha;\n  }\n  alpha = Math.max( 0, Math.min( 1, alpha ) );\n  var isFirstHalf = alpha < 0.5;\n  var slope = isFirstHalf ? alpha : 1 - alpha;\n  slope /= 0.5;\n  // make easing steeper with more multiples\n  var powerMultiplier = powerMultipliers[ power ] || powerMultipliers[2];\n  var curve = powerMultiplier( slope );\n  curve /= 2;\n  return isFirstHalf ? curve : 1 - curve;\n};\n\nreturn Zdog;\n\n}));\n","/**\n * Anchor\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./canvas-renderer'), require('./svg-renderer') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory( Zdog, Zdog.Vector, Zdog.CanvasRenderer,\n        Zdog.SvgRenderer );\n  }\n}( this, function factory( utils, Vector, CanvasRenderer, SvgRenderer ) {\n\nvar TAU = utils.TAU;\nvar onePoint = { x: 1, y: 1, z: 1 };\n\nfunction Anchor( options ) {\n  this.create( options || {} );\n}\n\nAnchor.prototype.create = function( options ) {\n  this.children = [];\n  // set defaults & options\n  utils.extend( this, this.constructor.defaults );\n  this.setOptions( options );\n\n  // transform\n  this.translate = new Vector( options.translate );\n  this.rotate = new Vector( options.rotate );\n  this.scale = new Vector( onePoint ).multiply( this.scale );\n  // origin\n  this.origin = new Vector();\n  this.renderOrigin = new Vector();\n\n  if ( this.addTo ) {\n    this.addTo.addChild( this );\n  }\n};\n\nAnchor.defaults = {};\n\nAnchor.optionKeys = Object.keys( Anchor.defaults ).concat([\n  'rotate',\n  'translate',\n  'scale',\n  'addTo',\n]);\n\nAnchor.prototype.setOptions = function( options ) {\n  var optionKeys = this.constructor.optionKeys;\n\n  for ( var key in options ) {\n    if ( optionKeys.indexOf( key ) != -1 ) {\n      this[ key ] = options[ key ];\n    }\n  }\n};\n\nAnchor.prototype.addChild = function( shape ) {\n  if ( this.children.indexOf( shape ) != -1 ) {\n    return;\n  }\n  shape.remove(); // remove previous parent\n  shape.addTo = this; // keep parent reference\n  this.children.push( shape );\n};\n\nAnchor.prototype.removeChild = function( shape ) {\n  var index = this.children.indexOf( shape );\n  if ( index != -1 ) {\n    this.children.splice( index, 1 );\n  }\n};\n\nAnchor.prototype.remove = function() {\n  if ( this.addTo ) {\n    this.addTo.removeChild( this );\n  }\n};\n\n// ----- update ----- //\n\nAnchor.prototype.update = function() {\n  // update self\n  this.reset();\n  // update children\n  this.children.forEach( function( child ) {\n    child.update();\n  });\n  this.transform( this.translate, this.rotate, this.scale );\n};\n\nAnchor.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n};\n\nAnchor.prototype.transform = function( translation, rotation, scale ) {\n  this.renderOrigin.transform( translation, rotation, scale );\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nAnchor.prototype.updateGraph = function() {\n  this.update();\n  this.updateFlatGraph();\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n  });\n  // z-sort\n  this.flatGraph.sort( Anchor.shapeSorter );\n};\n\nAnchor.shapeSorter = function( a, b ) {\n  return a.sortValue - b.sortValue;\n};\n\n// custom getter to check for flatGraph before using it\nObject.defineProperty( Anchor.prototype, 'flatGraph', {\n  get: function() {\n    if ( !this._flatGraph ) {\n      this.updateFlatGraph();\n    }\n    return this._flatGraph;\n  },\n  set: function( graph ) {\n    this._flatGraph = graph;\n  },\n});\n\nAnchor.prototype.updateFlatGraph = function() {\n  this.flatGraph = this.getFlatGraph();\n};\n\n// return Array of self & all child graph items\nAnchor.prototype.getFlatGraph = function() {\n  var flatGraph = [ this ];\n  return this.addChildFlatGraph( flatGraph );\n};\n\nAnchor.prototype.addChildFlatGraph = function( flatGraph ) {\n  this.children.forEach( function( child ) {\n    var childFlatGraph = child.getFlatGraph();\n    Array.prototype.push.apply( flatGraph, childFlatGraph );\n  });\n  return flatGraph;\n};\n\nAnchor.prototype.updateSortValue = function() {\n  this.sortValue = this.renderOrigin.z;\n};\n\n// ----- render ----- //\n\nAnchor.prototype.render = function() {};\n\n// TODO refactor out CanvasRenderer so its not a dependency within anchor.js\nAnchor.prototype.renderGraphCanvas = function( ctx ) {\n  if ( !ctx ) {\n    throw new Error( 'ctx is ' + ctx + '. ' +\n      'Canvas context required for render. Check .renderGraphCanvas( ctx ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, CanvasRenderer );\n  });\n};\n\nAnchor.prototype.renderGraphSvg = function( svg ) {\n  if ( !svg ) {\n    throw new Error( 'svg is ' + svg + '. ' +\n      'SVG required for render. Check .renderGraphSvg( svg ).' );\n  }\n  this.flatGraph.forEach( function( item ) {\n    item.render( svg, SvgRenderer );\n  });\n};\n\n// ----- misc ----- //\n\nAnchor.prototype.copy = function( options ) {\n  // copy options\n  var itemOptions = {};\n  var optionKeys = this.constructor.optionKeys;\n  optionKeys.forEach( function( key ) {\n    itemOptions[ key ] = this[ key ];\n  }, this );\n  // add set options\n  utils.extend( itemOptions, options );\n  var ItemClass = this.constructor;\n  return new ItemClass( itemOptions );\n};\n\nAnchor.prototype.copyGraph = function( options ) {\n  var clone = this.copy( options );\n  this.children.forEach( function( child ) {\n    child.copyGraph({\n      addTo: clone,\n    });\n  });\n  return clone;\n};\n\nAnchor.prototype.normalizeRotate = function() {\n  this.rotate.x = utils.modulo( this.rotate.x, TAU );\n  this.rotate.y = utils.modulo( this.rotate.y, TAU );\n  this.rotate.z = utils.modulo( this.rotate.z, TAU );\n};\n\n// ----- subclass ----- //\n\nfunction getSubclass( Super ) {\n  return function( defaults ) {\n    // create constructor\n    function Item( options ) {\n      this.create( options || {} );\n    }\n\n    Item.prototype = Object.create( Super.prototype );\n    Item.prototype.constructor = Item;\n\n    Item.defaults = utils.extend( {}, Super.defaults );\n    utils.extend( Item.defaults, defaults );\n    // create optionKeys\n    Item.optionKeys = Super.optionKeys.slice(0);\n    // add defaults keys to optionKeys, dedupe\n    Object.keys( Item.defaults ).forEach( function( key ) {\n      if ( !Item.optionKeys.indexOf( key ) != 1 ) {\n        Item.optionKeys.push( key );\n      }\n    });\n\n    Item.subclass = getSubclass( Item );\n\n    return Item;\n  };\n}\n\nAnchor.subclass = getSubclass( Anchor );\n\nreturn Anchor;\n\n}));\n","/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory( Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor ) {\n\nvar Shape = Anchor.subclass({\n  stroke: 1,\n  fill: false,\n  color: '#333',\n  closed: true,\n  visible: true,\n  path: [ {} ],\n  front: { z: 1 },\n  backface: true,\n});\n\nShape.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // front\n  this.front = new Vector( options.front || this.front );\n  this.renderFront = new Vector( this.front );\n  this.renderNormal = new Vector();\n};\n\nvar actionNames = [\n  'move',\n  'line',\n  'bezier',\n  'arc',\n];\n\nShape.prototype.updatePath = function() {\n  this.setPath();\n  this.updatePathCommands();\n};\n\n// place holder for Ellipse, Rect, etc.\nShape.prototype.setPath = function() {};\n\n// parse path into PathCommands\nShape.prototype.updatePathCommands = function() {\n  var previousPoint;\n  this.pathCommands = this.path.map( function( pathPart, i ) {\n    // pathPart can be just vector coordinates -> { x, y, z }\n    // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n    var keys = Object.keys( pathPart );\n    var method = keys[0];\n    var points = pathPart[ method ];\n    // default to line if no instruction\n    var isInstruction = keys.length == 1 && actionNames.indexOf( method ) != -1;\n    if ( !isInstruction ) {\n      method = 'line';\n      points = pathPart;\n    }\n    // munge single-point methods like line & move without arrays\n    var isLineOrMove = method == 'line' || method == 'move';\n    var isPointsArray = Array.isArray( points );\n    if ( isLineOrMove && !isPointsArray ) {\n      points = [ points ];\n    }\n\n    // first action is always move\n    method = i === 0 ? 'move' : method;\n    // arcs require previous last point\n    var command = new PathCommand( method, points, previousPoint );\n    // update previousLastPoint\n    previousPoint = command.endRenderPoint;\n    return command;\n  });\n};\n\n// ----- update ----- //\n\nShape.prototype.reset = function() {\n  this.renderOrigin.set( this.origin );\n  this.renderFront.set( this.front );\n  // reset command render points\n  this.pathCommands.forEach( function( command ) {\n    command.reset();\n  });\n};\n\nShape.prototype.transform = function( translation, rotation, scale ) {\n  // calculate render points backface visibility & cone/hemisphere shapes\n  this.renderOrigin.transform( translation, rotation, scale );\n  this.renderFront.transform( translation, rotation, scale );\n  this.renderNormal.set( this.renderOrigin ).subtract( this.renderFront );\n  // transform points\n  this.pathCommands.forEach( function( command ) {\n    command.transform( translation, rotation, scale );\n  });\n  // transform children\n  this.children.forEach( function( child ) {\n    child.transform( translation, rotation, scale );\n  });\n};\n\nShape.prototype.updateSortValue = function() {\n  // sort by average z of all points\n  // def not geometrically correct, but works for me\n  var pointCount = this.pathCommands.length;\n  var firstPoint = this.pathCommands[0].endRenderPoint;\n  var lastPoint = this.pathCommands[ pointCount - 1 ].endRenderPoint;\n  // ignore the final point if self closing shape\n  var isSelfClosing = pointCount > 2 && firstPoint.isSame( lastPoint );\n  if ( isSelfClosing ) {\n    pointCount -= 1;\n  }\n\n  var sortValueTotal = 0;\n  for ( var i = 0; i < pointCount; i++ ) {\n    sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n  }\n  this.sortValue = sortValueTotal / pointCount;\n};\n\n// ----- render ----- //\n\nShape.prototype.render = function( ctx, renderer ) {\n  var length = this.pathCommands.length;\n  if ( !this.visible || !length ) {\n    return;\n  }\n  // do not render if hiding backface\n  this.isFacingBack = this.renderNormal.z > 0;\n  if ( !this.backface && this.isFacingBack ) {\n    return;\n  }\n  if ( !renderer ) {\n    throw new Error( 'Zdog renderer required. Set to ' + renderer );\n  }\n  // render dot or path\n  var isDot = length == 1;\n  if ( renderer.isCanvas && isDot ) {\n    this.renderCanvasDot( ctx, renderer );\n  } else {\n    this.renderPath( ctx, renderer );\n  }\n};\n\nvar TAU = utils.TAU;\n// Safari does not render lines with no size, have to render circle instead\nShape.prototype.renderCanvasDot = function( ctx ) {\n  var lineWidth = this.getLineWidth();\n  if ( !lineWidth ) {\n    return;\n  }\n  ctx.fillStyle = this.getRenderColor();\n  var point = this.pathCommands[0].endRenderPoint;\n  ctx.beginPath();\n  var radius = lineWidth/2;\n  ctx.arc( point.x, point.y, radius, 0, TAU );\n  ctx.fill();\n};\n\nShape.prototype.getLineWidth = function() {\n  if ( !this.stroke ) {\n    return 0;\n  }\n  if ( this.stroke == true ) {\n    return 1;\n  }\n  return this.stroke;\n};\n\nShape.prototype.getRenderColor = function() {\n  // use backface color if applicable\n  var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n  var color = isBackfaceColor ? this.backface : this.color;\n  return color;\n};\n\nShape.prototype.renderPath = function( ctx, renderer ) {\n  var elem = this.getRenderElement( ctx, renderer );\n  var isTwoPoints = this.pathCommands.length == 2 &&\n    this.pathCommands[1].method == 'line';\n  var isClosed = !isTwoPoints && this.closed;\n  var color = this.getRenderColor();\n\n  renderer.renderPath( ctx, elem, this.pathCommands, isClosed );\n  renderer.stroke( ctx, elem, this.stroke, color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nShape.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n    this.svgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.svgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.svgElement;\n};\n\nreturn Shape;\n\n}));\n","/**\n * Vector\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory( Zdog );\n  }\n\n}( this, function factory( utils ) {\n\nfunction Vector( position ) {\n  this.set( position );\n}\n\nvar TAU = utils.TAU;\n\n// 'pos' = 'position'\nVector.prototype.set = function( pos ) {\n  this.x = pos && pos.x || 0;\n  this.y = pos && pos.y || 0;\n  this.z = pos && pos.z || 0;\n  return this;\n};\n\n// set coordinates without sanitizing\n// vec.write({ y: 2 }) only sets y coord\nVector.prototype.write = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x = pos.x != undefined ? pos.x : this.x;\n  this.y = pos.y != undefined ? pos.y : this.y;\n  this.z = pos.z != undefined ? pos.z : this.z;\n  return this;\n};\n\nVector.prototype.rotate = function( rotation ) {\n  if ( !rotation ) {\n    return;\n  }\n  this.rotateZ( rotation.z );\n  this.rotateY( rotation.y );\n  this.rotateX( rotation.x );\n  return this;\n};\n\nVector.prototype.rotateZ = function( angle ) {\n  rotateProperty( this, angle, 'x', 'y' );\n};\n\nVector.prototype.rotateX = function( angle ) {\n  rotateProperty( this, angle, 'y', 'z' );\n};\n\nVector.prototype.rotateY = function( angle ) {\n  rotateProperty( this, angle, 'x', 'z' );\n};\n\nfunction rotateProperty( vec, angle, propA, propB ) {\n  if ( !angle || angle % TAU === 0 ) {\n    return;\n  }\n  var cos = Math.cos( angle );\n  var sin = Math.sin( angle );\n  var a = vec[ propA ];\n  var b = vec[ propB ];\n  vec[ propA ] = a*cos - b*sin;\n  vec[ propB ] = b*cos + a*sin;\n}\n\nVector.prototype.isSame = function( pos ) {\n  if ( !pos ) {\n    return false;\n  }\n  return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n};\n\nVector.prototype.add = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x += pos.x || 0;\n  this.y += pos.y || 0;\n  this.z += pos.z || 0;\n  return this;\n};\n\nVector.prototype.subtract = function( pos ) {\n  if ( !pos ) {\n    return this;\n  }\n  this.x -= pos.x || 0;\n  this.y -= pos.y || 0;\n  this.z -= pos.z || 0;\n  return this;\n};\n\nVector.prototype.multiply = function( pos ) {\n  if ( pos == undefined ) {\n    return this;\n  }\n  // multiple all values by same number\n  if ( typeof pos == 'number' ) {\n    this.x *= pos;\n    this.y *= pos;\n    this.z *= pos;\n  } else {\n    // multiply object\n    this.x *= pos.x != undefined ? pos.x : 1;\n    this.y *= pos.y != undefined ? pos.y : 1;\n    this.z *= pos.z != undefined ? pos.z : 1;\n  }\n  return this;\n};\n\nVector.prototype.transform = function( translation, rotation, scale ) {\n  this.multiply( scale );\n  this.rotate( rotation );\n  this.add( translation );\n  return this;\n};\n\nVector.prototype.lerp = function( pos, alpha ) {\n  this.x = utils.lerp( this.x, pos.x || 0, alpha );\n  this.y = utils.lerp( this.y, pos.y || 0, alpha );\n  this.z = utils.lerp( this.z, pos.z || 0, alpha );\n  return this;\n};\n\nVector.prototype.magnitude = function() {\n  var sum = this.x*this.x + this.y*this.y + this.z*this.z;\n  return getMagnitudeSqrt( sum );\n};\n\nfunction getMagnitudeSqrt( sum ) {\n  // PERF: check if sum ~= 1 and skip sqrt\n  if ( Math.abs( sum - 1 ) < 0.00000001 ) {\n    return 1;\n  }\n  return Math.sqrt( sum );\n}\n\nVector.prototype.magnitude2d = function() {\n  var sum = this.x*this.x + this.y*this.y;\n  return getMagnitudeSqrt( sum );\n};\n\nVector.prototype.copy = function() {\n  return new Vector( this );\n};\n\nreturn Vector;\n\n}));\n","/**\n * Index\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n        require('./boilerplate'),\n        require('./canvas-renderer'),\n        require('./svg-renderer'),\n        require('./vector'),\n        require('./anchor'),\n        require('./dragger'),\n        require('./illustration'),\n        require('./path-command'),\n        require('./shape'),\n        require('./group'),\n        require('./rect'),\n        require('./rounded-rect'),\n        require('./ellipse'),\n        require('./polygon'),\n        require('./hemisphere'),\n        require('./cylinder'),\n        require('./cone'),\n        require('./box')\n    );\n  } else if ( typeof define == 'function' && define.amd ) {\n    /* globals define */ // AMD\n    define( 'zdog', [], root.Zdog );\n  }\n})( this, function factory( Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor,\n    Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect,\n    Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box ) {\n\n      Zdog.CanvasRenderer = CanvasRenderer;\n      Zdog.SvgRenderer = SvgRenderer;\n      Zdog.Vector = Vector;\n      Zdog.Anchor = Anchor;\n      Zdog.Dragger = Dragger;\n      Zdog.Illustration = Illustration;\n      Zdog.PathCommand = PathCommand;\n      Zdog.Shape = Shape;\n      Zdog.Group = Group;\n      Zdog.Rect = Rect;\n      Zdog.RoundedRect = RoundedRect;\n      Zdog.Ellipse = Ellipse;\n      Zdog.Polygon = Polygon;\n      Zdog.Hemisphere = Hemisphere;\n      Zdog.Cylinder = Cylinder;\n      Zdog.Cone = Cone;\n      Zdog.Box = Box;\n\n      return Zdog;\n});\n","/**\n * PathCommand\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./vector') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory( Zdog.Vector );\n  }\n}( this, function factory( Vector ) {\n\nfunction PathCommand( method, points, previousPoint ) {\n  this.method = method;\n  this.points = points.map( mapVectorPoint );\n  this.renderPoints = points.map( mapNewVector );\n  this.previousPoint = previousPoint;\n  this.endRenderPoint = this.renderPoints[ this.renderPoints.length - 1 ];\n  // arc actions come with previous point & corner point\n  // but require bezier control points\n  if ( method == 'arc' ) {\n    this.controlPoints = [ new Vector(), new Vector() ];\n  }\n}\n\nfunction mapVectorPoint( point ) {\n  if ( point instanceof Vector ) {\n    return point;\n  } else {\n    return new Vector( point );\n  }\n}\n\nfunction mapNewVector( point ) {\n  return new Vector( point );\n}\n\nPathCommand.prototype.reset = function() {\n  // reset renderPoints back to orignal points position\n  var points = this.points;\n  this.renderPoints.forEach( function( renderPoint, i ) {\n    var point = points[i];\n    renderPoint.set( point );\n  });\n};\n\nPathCommand.prototype.transform = function( translation, rotation, scale ) {\n  this.renderPoints.forEach( function( renderPoint ) {\n    renderPoint.transform( translation, rotation, scale );\n  });\n};\n\nPathCommand.prototype.render = function( ctx, elem, renderer ) {\n  return this[ this.method ]( ctx, elem, renderer );\n};\n\nPathCommand.prototype.move = function( ctx, elem, renderer ) {\n  return renderer.move( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.line = function( ctx, elem, renderer ) {\n  return renderer.line( ctx, elem, this.renderPoints[0] );\n};\n\nPathCommand.prototype.bezier = function( ctx, elem, renderer ) {\n  var cp0 = this.renderPoints[0];\n  var cp1 = this.renderPoints[1];\n  var end = this.renderPoints[2];\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nvar arcHandleLength = 9/16;\n\nPathCommand.prototype.arc = function( ctx, elem, renderer ) {\n  var prev = this.previousPoint;\n  var corner = this.renderPoints[0];\n  var end = this.renderPoints[1];\n  var cp0 = this.controlPoints[0];\n  var cp1 = this.controlPoints[1];\n  cp0.set( prev ).lerp( corner, arcHandleLength );\n  cp1.set( end ).lerp( corner, arcHandleLength );\n  return renderer.bezier( ctx, elem, cp0, cp1, end );\n};\n\nreturn PathCommand;\n\n}));\n","/**\n * Ellipse\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory( Zdog.Shape );\n  }\n\n}( this, function factory( Shape ) {\n\nvar Ellipse = Shape.subclass({\n  diameter: 1,\n  width: undefined,\n  height: undefined,\n  quarters: 4,\n  closed: false,\n});\n\nEllipse.prototype.setPath = function() {\n  var width = this.width != undefined ? this.width : this.diameter;\n  var height = this.height != undefined ? this.height : this.diameter;\n  var x = width / 2;\n  var y = height / 2;\n  this.path = [\n    { x: 0, y: -y },\n    { arc: [ // top right\n      { x: x, y: -y },\n      { x: x, y: 0 },\n    ]},\n  ];\n  // bottom right\n  if ( this.quarters > 1 ) {\n    this.path.push({ arc: [\n      { x: x, y: y },\n      { x: 0, y: y },\n    ]});\n  }\n  // bottom left\n  if ( this.quarters > 2 ) {\n    this.path.push({ arc: [\n      { x: -x, y: y },\n      { x: -x, y: 0 },\n    ]});\n  }\n  // top left\n  if ( this.quarters > 3 ) {\n    this.path.push({ arc: [\n      { x: -x, y: -y },\n      { x: 0, y: -y },\n    ]});\n  }\n};\n\nreturn Ellipse;\n\n}));\n","/**\n * CanvasRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n}( this, function factory() {\n\nvar CanvasRenderer = { isCanvas: true };\n\nCanvasRenderer.begin = function( ctx ) {\n  ctx.beginPath();\n};\n\nCanvasRenderer.move = function( ctx, elem, point ) {\n  ctx.moveTo( point.x, point.y );\n};\n\nCanvasRenderer.line = function( ctx, elem, point ) {\n  ctx.lineTo( point.x, point.y );\n};\n\nCanvasRenderer.bezier = function( ctx, elem, cp0, cp1, end ) {\n  ctx.bezierCurveTo( cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y );\n};\n\nCanvasRenderer.closePath = function( ctx ) {\n  ctx.closePath();\n};\n\nCanvasRenderer.setPath = function() {};\n\nCanvasRenderer.renderPath = function( ctx, elem, pathCommands, isClosed ) {\n  this.begin( ctx, elem );\n  pathCommands.forEach( function( command ) {\n    command.render( ctx, elem, CanvasRenderer );\n  });\n  if ( isClosed ) {\n    this.closePath( ctx, elem );\n  }\n};\n\nCanvasRenderer.stroke = function( ctx, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.stroke();\n};\n\nCanvasRenderer.fill = function( ctx, elem, isFill, color ) {\n  if ( !isFill ) {\n    return;\n  }\n  ctx.fillStyle = color;\n  ctx.fill();\n};\n\nCanvasRenderer.end = function() {};\n\nreturn CanvasRenderer;\n\n}));\n","/**\n * SvgRenderer\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n}( this, function factory() {\n\nvar SvgRenderer = { isSvg: true };\n\n// round path coordinates to 3 decimals\nvar round = SvgRenderer.round = function( num ) {\n  return Math.round( num * 1000 ) / 1000;\n};\n\nfunction getPointString( point ) {\n  return round( point.x ) + ',' + round( point.y ) + ' ';\n}\n\nSvgRenderer.begin = function() {};\n\nSvgRenderer.move = function( svg, elem, point ) {\n  return 'M' + getPointString( point );\n};\n\nSvgRenderer.line = function( svg, elem, point ) {\n  return 'L' + getPointString( point );\n};\n\nSvgRenderer.bezier = function( svg, elem, cp0, cp1, end ) {\n  return 'C' + getPointString( cp0 ) + getPointString( cp1 ) +\n    getPointString( end );\n};\n\nSvgRenderer.closePath = function(/* elem */) {\n  return 'Z';\n};\n\nSvgRenderer.setPath = function( svg, elem, pathValue ) {\n  elem.setAttribute( 'd', pathValue );\n};\n\nSvgRenderer.renderPath = function( svg, elem, pathCommands, isClosed ) {\n  var pathValue = '';\n  pathCommands.forEach( function( command ) {\n    pathValue += command.render( svg, elem, SvgRenderer );\n  });\n  if ( isClosed ) {\n    pathValue += this.closePath( svg, elem );\n  }\n  this.setPath( svg, elem, pathValue );\n};\n\nSvgRenderer.stroke = function( svg, elem, isStroke, color, lineWidth ) {\n  if ( !isStroke ) {\n    return;\n  }\n  elem.setAttribute( 'stroke', color );\n  elem.setAttribute( 'stroke-width', lineWidth );\n};\n\nSvgRenderer.fill = function( svg, elem, isFill, color ) {\n  var fillColor = isFill ? color : 'none';\n  elem.setAttribute( 'fill', fillColor );\n};\n\nSvgRenderer.end = function( svg, elem ) {\n  svg.appendChild( elem );\n};\n\nreturn SvgRenderer;\n\n}));\n","/*** IMPORTS FROM imports-loader ***/\n(function() {\n\n/**\n * Dragger\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( root );\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory( root );\n  }\n}( this, function factory( window ) {\n\n// quick & dirty drag event stuff\n// messes up if multiple pointers/touches\n\n// event support, default to mouse events\nvar downEvent = 'mousedown';\nvar moveEvent = 'mousemove';\nvar upEvent = 'mouseup';\nif ( window.PointerEvent ) {\n  // PointerEvent, Chrome\n  downEvent = 'pointerdown';\n  moveEvent = 'pointermove';\n  upEvent = 'pointerup';\n} else if ( 'ontouchstart' in window ) {\n  // Touch Events, iOS Safari\n  downEvent = 'touchstart';\n  moveEvent = 'touchmove';\n  upEvent = 'touchend';\n}\n\nfunction noop() {}\n\nfunction Dragger( options ) {\n  this.create( options || {} );\n}\n\nDragger.prototype.create = function( options ) {\n  this.onDragStart = options.onDragStart || noop;\n  this.onDragMove = options.onDragMove || noop;\n  this.onDragEnd = options.onDragEnd || noop;\n\n  this.bindDrag( options.startElement );\n};\n\nDragger.prototype.bindDrag = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    return;\n  }\n  // disable browser gestures #53\n  element.style.touchAction = 'none';\n  element.addEventListener( downEvent, this );\n};\n\nDragger.prototype.getQueryElement = function( element ) {\n  if ( typeof element == 'string' ) {\n    // with string, query selector\n    element = document.querySelector( element );\n  }\n  return element;\n};\n\nDragger.prototype.handleEvent = function( event ) {\n  var method = this[ 'on' + event.type ];\n  if ( method ) {\n    method.call( this, event );\n  }\n};\n\nDragger.prototype.onmousedown =\nDragger.prototype.onpointerdown = function( event ) {\n  this.dragStart( event, event );\n};\n\nDragger.prototype.ontouchstart = function( event ) {\n  this.dragStart( event, event.changedTouches[0] );\n};\n\nDragger.prototype.dragStart = function( event, pointer ) {\n  event.preventDefault();\n  this.dragStartX = pointer.pageX;\n  this.dragStartY = pointer.pageY;\n  window.addEventListener( moveEvent, this );\n  window.addEventListener( upEvent, this );\n  this.onDragStart( pointer );\n};\n\nDragger.prototype.ontouchmove = function( event ) {\n  // HACK, moved touch may not be first\n  this.dragMove( event, event.changedTouches[0] );\n};\n\nDragger.prototype.onmousemove =\nDragger.prototype.onpointermove = function( event ) {\n  this.dragMove( event, event );\n};\n\nDragger.prototype.dragMove = function( event, pointer ) {\n  event.preventDefault();\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  this.onDragMove( pointer, moveX, moveY );\n};\n\nDragger.prototype.onmouseup =\nDragger.prototype.onpointerup =\nDragger.prototype.ontouchend =\nDragger.prototype.dragEnd = function(/* event */) {\n  window.removeEventListener( moveEvent, this );\n  window.removeEventListener( upEvent, this );\n  this.onDragEnd();\n};\n\nreturn Dragger;\n\n}));\n\n}.call(window));","/**\n * Group\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./anchor') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory( Zdog.Anchor );\n  }\n}( this, function factory( Anchor ) {\n\nvar Group = Anchor.subclass({\n  updateSort: false,\n  visible: true,\n});\n\n// ----- update ----- //\n\nGroup.prototype.updateSortValue = function() {\n  var sortValueTotal = 0;\n  this.flatGraph.forEach( function( item ) {\n    item.updateSortValue();\n    sortValueTotal += item.sortValue;\n  });\n  // average sort value of all points\n  // def not geometrically correct, but works for me\n  this.sortValue = sortValueTotal / this.flatGraph.length;\n\n  if ( this.updateSort ) {\n    this.flatGraph.sort( Anchor.shapeSorter );\n  }\n};\n\n// ----- render ----- //\n\nGroup.prototype.render = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n\n  this.flatGraph.forEach( function( item ) {\n    item.render( ctx, renderer );\n  });\n};\n\n// actual group flatGraph only used inside group\nGroup.prototype.updateFlatGraph = function() {\n  // do not include self\n  var flatGraph = [];\n  this.flatGraph = this.addChildFlatGraph( flatGraph );\n};\n\n// do not include children, group handles rendering & sorting internally\nGroup.prototype.getFlatGraph = function() {\n  return [ this ];\n};\n\nreturn Group;\n\n}));\n","/**\n * Rect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar Rect = Shape.subclass({\n  width: 1,\n  height: 1,\n});\n\nRect.prototype.setPath = function() {\n  var x = this.width / 2;\n  var y = this.height / 2;\n  /* eslint key-spacing: \"off\" */\n  this.path = [\n    { x: -x, y: -y },\n    { x:  x, y: -y },\n    { x:  x, y:  y },\n    { x: -x, y:  y },\n  ];\n};\n\nreturn Rect;\n\n}));\n","/**\n * Illustration\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./dragger') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory( Zdog, Zdog.Anchor, Zdog.Dragger );\n  }\n}( this, function factory( utils, Anchor, Dragger ) {\n\nfunction noop() {}\nvar TAU = utils.TAU;\n\nvar Illustration = Anchor.subclass({\n  element: undefined,\n  centered: true,\n  zoom: 1,\n  dragRotate: false,\n  resize: false,\n  onPrerender: noop,\n  onDragStart: noop,\n  onDragMove: noop,\n  onDragEnd: noop,\n  onResize: noop,\n});\n\nutils.extend( Illustration.prototype, Dragger.prototype );\n\nIllustration.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  Dragger.prototype.create.call( this, options );\n  this.setElement( this.element );\n  this.setDragRotate( this.dragRotate );\n  this.setResize( this.resize );\n};\n\nIllustration.prototype.setElement = function( element ) {\n  element = this.getQueryElement( element );\n  if ( !element ) {\n    throw new Error( 'Zdog.Illustration element required. Set to ' + element );\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  if ( nodeName == 'canvas' ) {\n    this.setCanvas( element );\n  } else if ( nodeName == 'svg' ) {\n    this.setSvg( element );\n  }\n};\n\nIllustration.prototype.setSize = function( width, height ) {\n  width = Math.round( width );\n  height = Math.round( height );\n  if ( this.isCanvas ) {\n    this.setSizeCanvas( width, height );\n  } else if ( this.isSvg ) {\n    this.setSizeSvg( width, height );\n  }\n};\n\nIllustration.prototype.setResize = function( resize ) {\n  this.resize = resize;\n  // create resize event listener\n  if ( !this.resizeListener ) {\n    this.resizeListener = this.onWindowResize.bind( this );\n  }\n  // add/remove event listener\n  if ( resize ) {\n    window.addEventListener( 'resize', this.resizeListener );\n    this.onWindowResize();\n  } else {\n    window.removeEventListener( 'resize', this.resizeListener );\n  }\n};\n\n// TODO debounce this?\nIllustration.prototype.onWindowResize = function() {\n  this.setMeasuredSize();\n  this.onResize( this.width, this.height );\n};\n\nIllustration.prototype.setMeasuredSize = function() {\n  var width, height;\n  var isFullscreen = this.resize == 'fullscreen';\n  if ( isFullscreen ) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n  } else {\n    var rect = this.element.getBoundingClientRect();\n    width = rect.width;\n    height = rect.height;\n  }\n  this.setSize( width, height );\n};\n\n// ----- render ----- //\n\nIllustration.prototype.renderGraph = function( item ) {\n  if ( this.isCanvas ) {\n    this.renderGraphCanvas( item );\n  } else if ( this.isSvg ) {\n    this.renderGraphSvg( item );\n  }\n};\n\n// combo method\nIllustration.prototype.updateRenderGraph = function( item ) {\n  this.updateGraph();\n  this.renderGraph( item );\n};\n\n// ----- canvas ----- //\n\nIllustration.prototype.setCanvas = function( element ) {\n  this.element = element;\n  this.isCanvas = true;\n  // update related properties\n  this.ctx = this.element.getContext('2d');\n  // set initial size\n  this.setSizeCanvas( element.width, element.height );\n};\n\nIllustration.prototype.setSizeCanvas = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  // up-rez for hi-DPI devices\n  var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n  this.element.width = this.canvasWidth = width * pixelRatio;\n  this.element.height = this.canvasHeight = height * pixelRatio;\n  var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n  if ( needsHighPixelRatioSizing ) {\n    this.element.style.width = width + 'px';\n    this.element.style.height = height + 'px';\n  }\n};\n\nIllustration.prototype.renderGraphCanvas = function( item ) {\n  item = item || this;\n  this.prerenderCanvas();\n  Anchor.prototype.renderGraphCanvas.call( item, this.ctx );\n  this.postrenderCanvas();\n};\n\nIllustration.prototype.prerenderCanvas = function() {\n  var ctx = this.ctx;\n  ctx.lineCap = 'round';\n  ctx.lineJoin = 'round';\n  ctx.clearRect( 0, 0, this.canvasWidth, this.canvasHeight );\n  ctx.save();\n  if ( this.centered ) {\n    var centerX = this.width/2 * this.pixelRatio;\n    var centerY = this.height/2 * this.pixelRatio;\n    ctx.translate( centerX, centerY );\n  }\n  var scale = this.pixelRatio * this.zoom;\n  ctx.scale( scale, scale );\n  this.onPrerender( ctx );\n};\n\nIllustration.prototype.postrenderCanvas = function() {\n  this.ctx.restore();\n};\n\n// ----- svg ----- //\n\nIllustration.prototype.setSvg = function( element ) {\n  this.element = element;\n  this.isSvg = true;\n  this.pixelRatio = 1;\n  // set initial size from width & height attributes\n  var width = element.getAttribute('width');\n  var height = element.getAttribute('height');\n  this.setSizeSvg( width, height );\n};\n\nIllustration.prototype.setSizeSvg = function( width, height ) {\n  this.width = width;\n  this.height = height;\n  var viewWidth = width / this.zoom;\n  var viewHeight = height / this.zoom;\n  var viewX = this.centered ? -viewWidth/2 : 0;\n  var viewY = this.centered ? -viewHeight/2 : 0;\n  this.element.setAttribute( 'viewBox', viewX + ' ' + viewY + ' ' +\n    viewWidth + ' ' + viewHeight );\n  if ( this.resize ) {\n    // remove size attributes, let size be determined by viewbox\n    this.element.removeAttribute('width');\n    this.element.removeAttribute('height');\n  } else {\n    this.element.setAttribute( 'width', width );\n    this.element.setAttribute( 'height', height );\n  }\n};\n\nIllustration.prototype.renderGraphSvg = function( item ) {\n  item = item || this;\n  empty( this.element );\n  this.onPrerender( this.element );\n  Anchor.prototype.renderGraphSvg.call( item, this.element );\n};\n\nfunction empty( element ) {\n  while ( element.firstChild ) {\n    element.removeChild( element.firstChild );\n  }\n}\n\n// ----- drag ----- //\n\nIllustration.prototype.setDragRotate = function( item ) {\n  if ( !item ) {\n    return;\n  } else if ( item === true ) {\n    /* eslint consistent-this: \"off\" */\n    item = this;\n  }\n  this.dragRotate = item;\n\n  this.bindDrag( this.element );\n};\n\nIllustration.prototype.dragStart = function(/* event, pointer */) {\n  this.dragStartRX = this.dragRotate.rotate.x;\n  this.dragStartRY = this.dragRotate.rotate.y;\n  Dragger.prototype.dragStart.apply( this, arguments );\n};\n\nIllustration.prototype.dragMove = function( event, pointer ) {\n  var moveX = pointer.pageX - this.dragStartX;\n  var moveY = pointer.pageY - this.dragStartY;\n  var displaySize = Math.min( this.width, this.height );\n  var moveRY = moveX / displaySize * TAU;\n  var moveRX = moveY / displaySize * TAU;\n  this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n  this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n  Dragger.prototype.dragMove.apply( this, arguments );\n};\n\nreturn Illustration;\n\n}));\n","/**\n * RoundedRect\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory( Zdog.Shape );\n  }\n}( this, function factory( Shape ) {\n\nvar RoundedRect = Shape.subclass({\n  width: 1,\n  height: 1,\n  cornerRadius: 0.25,\n  closed: false,\n});\n\nRoundedRect.prototype.setPath = function() {\n  /* eslint\n     id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n     key-spacing: \"off\" */\n  var xA = this.width / 2;\n  var yA = this.height / 2;\n  var shortSide = Math.min( xA, yA );\n  var cornerRadius = Math.min( this.cornerRadius, shortSide );\n  var xB = xA - cornerRadius;\n  var yB = yA - cornerRadius;\n  var path = [\n    // top right corner\n    { x: xB, y: -yA },\n    { arc: [\n      { x: xA, y: -yA },\n      { x: xA, y: -yB },\n    ]},\n  ];\n  // bottom right corner\n  if ( yB ) {\n    path.push({ x: xA, y: yB });\n  }\n  path.push({ arc: [\n    { x: xA, y:  yA },\n    { x: xB, y:  yA },\n  ]});\n  // bottom left corner\n  if ( xB ) {\n    path.push({ x: -xB, y: yA });\n  }\n  path.push({ arc: [\n    { x: -xA, y:  yA },\n    { x: -xA, y:  yB },\n  ]});\n  // top left corner\n  if ( yB ) {\n    path.push({ x: -xA, y: -yB });\n  }\n  path.push({ arc: [\n    { x: -xA, y: -yA },\n    { x: -xB, y: -yA },\n  ]});\n\n  // back to top right corner\n  if ( xB ) {\n    path.push({ x: xB, y: -yA });\n  }\n\n  this.path = path;\n};\n\nreturn RoundedRect;\n\n}));\n","/**\n * Shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./shape') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory( Zdog, Zdog.Shape );\n  }\n}( this, function factory( utils, Shape ) {\n\nvar Polygon = Shape.subclass({\n  sides: 3,\n  radius: 0.5,\n});\n\nvar TAU = utils.TAU;\n\nPolygon.prototype.setPath = function() {\n  this.path = [];\n  for ( var i=0; i < this.sides; i++ ) {\n    var theta = i/this.sides * TAU - TAU/4;\n    var x = Math.cos( theta ) * this.radius;\n    var y = Math.sin( theta ) * this.radius;\n    this.path.push({ x: x, y: y });\n  }\n};\n\nreturn Polygon;\n\n}));\n","/**\n * Hemisphere composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory( Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, Anchor, Ellipse ) {\n\nvar Hemisphere = Ellipse.subclass({\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nHemisphere.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.diameter/2 },\n  });\n  // vector used for calculation\n  this.renderCentroid = new Vector();\n};\n\nHemisphere.prototype.updateSortValue = function() {\n  // centroid of hemisphere is 3/8 between origin and apex\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 3/8 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nHemisphere.prototype.render = function( ctx, renderer ) {\n  this.renderDome( ctx, renderer );\n  // call super\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nHemisphere.prototype.renderDome = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  var elem = this.getDomeRenderElement( ctx, renderer );\n  var contourAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x );\n  var domeRadius = this.diameter/2 * this.renderNormal.magnitude();\n  var x = this.renderOrigin.x;\n  var y = this.renderOrigin.y;\n\n  if ( renderer.isCanvas ) {\n    // canvas\n    var startAngle = contourAngle + TAU/4;\n    var endAngle = contourAngle - TAU/4;\n    ctx.beginPath();\n    ctx.arc( x, y, domeRadius, startAngle, endAngle );\n  } else if ( renderer.isSvg ) {\n    // svg\n    contourAngle = (contourAngle - TAU/4) / TAU * 360;\n    this.domeSvgElement.setAttribute( 'd', 'M ' + -domeRadius + ',0 A ' +\n        domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0' );\n    this.domeSvgElement.setAttribute( 'transform',\n        'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')' );\n  }\n\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nHemisphere.prototype.getDomeRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.domeSvgElement ) {\n    // create svgElement\n    this.domeSvgElement = document.createElementNS( svgURI, 'path');\n    this.domeSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.domeSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.domeSvgElement;\n};\n\nreturn Hemisphere;\n\n}));\n","/**\n * Cylinder composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'),\n        require('./path-command'), require('./shape'), require('./group'),\n        require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory( Zdog, Zdog.PathCommand, Zdog.Shape,\n        Zdog.Group, Zdog.Ellipse );\n  }\n}( this, function factory( utils, PathCommand, Shape, Group, Ellipse ) {\n\nfunction noop() {}\n\n// ----- CylinderGroup ----- //\n\nvar CylinderGroup = Group.subclass({\n  color: '#333',\n  updateSort: true,\n});\n\nCylinderGroup.prototype.create = function() {\n  Group.prototype.create.apply( this, arguments );\n  this.pathCommands = [\n    new PathCommand( 'move', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCylinderGroup.prototype.render = function( ctx, renderer ) {\n  this.renderCylinderSurface( ctx, renderer );\n  Group.prototype.render.apply( this, arguments );\n};\n\nCylinderGroup.prototype.renderCylinderSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  // render cylinder surface\n  var elem = this.getRenderElement( ctx, renderer );\n  var frontBase = this.frontBase;\n  var rearBase = this.rearBase;\n  var scale = frontBase.renderNormal.magnitude();\n  var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth();\n  // set path command render points\n  this.pathCommands[0].renderPoints[0].set( frontBase.renderOrigin );\n  this.pathCommands[1].renderPoints[0].set( rearBase.renderOrigin );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'butt'; // nice\n  }\n  renderer.renderPath( ctx, elem, this.pathCommands );\n  renderer.stroke( ctx, elem, true, this.color, strokeWidth );\n  renderer.end( ctx, elem );\n\n  if ( renderer.isCanvas ) {\n    ctx.lineCap = 'round'; // reset\n  }\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCylinderGroup.prototype.getRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.svgElement ) {\n    // create svgElement\n    this.svgElement = document.createElementNS( svgURI, 'path');\n  }\n  return this.svgElement;\n};\n\n// prevent double-creation in parent.copyGraph()\n// only create in Cylinder.create()\nCylinderGroup.prototype.copyGraph = noop;\n\n// ----- CylinderEllipse ----- //\n\nvar CylinderEllipse = Ellipse.subclass();\n\nCylinderEllipse.prototype.copyGraph = noop;\n\n// ----- Cylinder ----- //\n\nvar Cylinder = Shape.subclass({\n  diameter: 1,\n  length: 1,\n  frontFace: undefined,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCylinder.prototype.create = function(/* options */) {\n  // call super\n  Shape.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  // CylinderGroup to render cylinder surface then bases\n  this.group = new CylinderGroup({\n    addTo: this,\n    color: this.color,\n    visible: this.visible,\n  });\n  var baseZ = this.length/2;\n  var baseColor = this.backface || true;\n  // front outside base\n  this.frontBase = this.group.frontBase = new Ellipse({\n    addTo: this.group,\n    diameter: this.diameter,\n    translate: { z: baseZ },\n    rotate: { y: TAU/2 },\n    color: this.color,\n    stroke: this.stroke,\n    fill: this.fill,\n    backface: this.frontFace || baseColor,\n    visible: this.visible,\n  });\n  // back outside base\n  this.rearBase = this.group.rearBase = this.frontBase.copy({\n    translate: { z: -baseZ },\n    rotate: { y: 0 },\n    backface: baseColor,\n  });\n};\n\n// Cylinder shape does not render anything\nCylinder.prototype.render = function() {};\n\n// ----- set child properties ----- //\n\nvar childProperties = [ 'stroke', 'fill', 'color', 'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Cylinder.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      // set property on children\n      if ( this.frontBase ) {\n        this.frontBase[ property ] = value;\n        this.rearBase[ property ] = value;\n        this.group[ property ] = value;\n      }\n    },\n  });\n});\n\n// TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\nreturn Cylinder;\n\n}));\n","/**\n * Cone composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./vector'),\n        require('./path-command'), require('./anchor'), require('./ellipse') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory( Zdog, Zdog.Vector, Zdog.PathCommand,\n        Zdog.Anchor, Zdog.Ellipse );\n  }\n}( this, function factory( utils, Vector, PathCommand, Anchor, Ellipse ) {\n\nvar Cone = Ellipse.subclass({\n  length: 1,\n  fill: true,\n});\n\nvar TAU = utils.TAU;\n\nCone.prototype.create = function(/* options */) {\n  // call super\n  Ellipse.prototype.create.apply( this, arguments );\n  // composite shape, create child shapes\n  this.apex = new Anchor({\n    addTo: this,\n    translate: { z: this.length },\n  });\n\n  // vectors used for calculation\n  this.renderApex = new Vector();\n  this.renderCentroid = new Vector();\n  this.tangentA = new Vector();\n  this.tangentB = new Vector();\n\n  this.surfacePathCommands = [\n    new PathCommand( 'move', [ {} ] ), // points set in renderConeSurface\n    new PathCommand( 'line', [ {} ] ),\n    new PathCommand( 'line', [ {} ] ),\n  ];\n};\n\nCone.prototype.updateSortValue = function() {\n  // center of cone is one third of its length\n  this.renderCentroid.set( this.renderOrigin )\n    .lerp( this.apex.renderOrigin, 1/3 );\n  this.sortValue = this.renderCentroid.z;\n};\n\nCone.prototype.render = function( ctx, renderer ) {\n  this.renderConeSurface( ctx, renderer );\n  Ellipse.prototype.render.apply( this, arguments );\n};\n\nCone.prototype.renderConeSurface = function( ctx, renderer ) {\n  if ( !this.visible ) {\n    return;\n  }\n  this.renderApex.set( this.apex.renderOrigin )\n    .subtract( this.renderOrigin );\n\n  var scale = this.renderNormal.magnitude();\n  var apexDistance = this.renderApex.magnitude2d();\n  var normalDistance = this.renderNormal.magnitude2d();\n  // eccentricity\n  var eccenAngle = Math.acos( normalDistance / scale );\n  var eccen = Math.sin( eccenAngle );\n  var radius = this.diameter/2 * scale;\n  // does apex extend beyond eclipse of face\n  var isApexVisible = radius * eccen < apexDistance;\n  if ( !isApexVisible ) {\n    return;\n  }\n  // update tangents\n  var apexAngle = Math.atan2( this.renderNormal.y, this.renderNormal.x ) +\n      TAU/2;\n  var projectLength = apexDistance / eccen;\n  var projectAngle = Math.acos( radius / projectLength );\n  // set tangent points\n  var tangentA = this.tangentA;\n  var tangentB = this.tangentB;\n\n  tangentA.x = Math.cos( projectAngle ) * radius * eccen;\n  tangentA.y = Math.sin( projectAngle ) * radius;\n\n  tangentB.set( this.tangentA );\n  tangentB.y *= -1;\n\n  tangentA.rotateZ( apexAngle );\n  tangentB.rotateZ( apexAngle );\n  tangentA.add( this.renderOrigin );\n  tangentB.add( this.renderOrigin );\n\n  this.setSurfaceRenderPoint( 0, tangentA );\n  this.setSurfaceRenderPoint( 1, this.apex.renderOrigin );\n  this.setSurfaceRenderPoint( 2, tangentB );\n\n  // render\n  var elem = this.getSurfaceRenderElement( ctx, renderer );\n  renderer.renderPath( ctx, elem, this.surfacePathCommands );\n  renderer.stroke( ctx, elem, this.stroke, this.color, this.getLineWidth() );\n  renderer.fill( ctx, elem, this.fill, this.color );\n  renderer.end( ctx, elem );\n};\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nCone.prototype.getSurfaceRenderElement = function( ctx, renderer ) {\n  if ( !renderer.isSvg ) {\n    return;\n  }\n  if ( !this.surfaceSvgElement ) {\n    // create svgElement\n    this.surfaceSvgElement = document.createElementNS( svgURI, 'path');\n    this.surfaceSvgElement.setAttribute( 'stroke-linecap', 'round' );\n    this.surfaceSvgElement.setAttribute( 'stroke-linejoin', 'round' );\n  }\n  return this.surfaceSvgElement;\n};\n\nCone.prototype.setSurfaceRenderPoint = function( index, point ) {\n  var renderPoint = this.surfacePathCommands[ index ].renderPoints[0];\n  renderPoint.set( point );\n};\n\nreturn Cone;\n\n}));\n","/**\n * Box composite shape\n */\n\n( function( root, factory ) {\n  // module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory( require('./boilerplate'), require('./anchor'),\n        require('./shape'), require('./rect') );\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory( Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect );\n  }\n}( this, function factory( utils, Anchor, Shape, Rect ) {\n\n// ----- BoxRect ----- //\n\nvar BoxRect = Rect.subclass();\n// prevent double-creation in parent.copyGraph()\n// only create in Box.create()\nBoxRect.prototype.copyGraph = function() {};\n\n// ----- Box ----- //\n\nvar TAU = utils.TAU;\nvar faceNames = [\n  'frontFace',\n  'rearFace',\n  'leftFace',\n  'rightFace',\n  'topFace',\n  'bottomFace',\n];\n\nvar boxDefaults = utils.extend( {}, Shape.defaults );\ndelete boxDefaults.path;\nfaceNames.forEach( function( faceName ) {\n  boxDefaults[ faceName ] = true;\n});\nutils.extend( boxDefaults, {\n  width: 1,\n  height: 1,\n  depth: 1,\n  fill: true,\n});\n\nvar Box = Anchor.subclass( boxDefaults );\n\nBox.prototype.create = function( options ) {\n  Anchor.prototype.create.call( this, options );\n  this.updatePath();\n  // HACK reset fill to trigger face setter\n  this.fill = this.fill;\n};\n\nBox.prototype.updatePath = function() {\n  // reset all faces to trigger setters\n  faceNames.forEach( function( faceName ) {\n    this[ faceName ] = this[ faceName ];\n  }, this );\n};\n\nfaceNames.forEach( function( faceName ) {\n  var _faceName = '_' + faceName;\n  Object.defineProperty( Box.prototype, faceName, {\n    get: function() {\n      return this[ _faceName ];\n    },\n    set: function( value ) {\n      this[ _faceName ] = value;\n      this.setFace( faceName, value );\n    },\n  });\n});\n\nBox.prototype.setFace = function( faceName, value ) {\n  var rectProperty = faceName + 'Rect';\n  var rect = this[ rectProperty ];\n  // remove if false\n  if ( !value ) {\n    this.removeChild( rect );\n    return;\n  }\n  // update & add face\n  var options = this.getFaceOptions( faceName );\n  options.color = typeof value == 'string' ? value : this.color;\n\n  if ( rect ) {\n    // update previous\n    rect.setOptions( options );\n  } else {\n    // create new\n    rect = this[ rectProperty ] = new BoxRect( options );\n  }\n  rect.updatePath();\n  this.addChild( rect );\n};\n\nBox.prototype.getFaceOptions = function( faceName ) {\n  return {\n    frontFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: this.depth/2 },\n    },\n    rearFace: {\n      width: this.width,\n      height: this.height,\n      translate: { z: -this.depth/2 },\n      rotate: { y: TAU/2 },\n    },\n    leftFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: -this.width/2 },\n      rotate: { y: -TAU/4 },\n    },\n    rightFace: {\n      width: this.depth,\n      height: this.height,\n      translate: { x: this.width/2 },\n      rotate: { y: TAU/4 },\n    },\n    topFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: -this.height/2 },\n      rotate: { x: -TAU/4 },\n    },\n    bottomFace: {\n      width: this.width,\n      height: this.depth,\n      translate: { y: this.height/2 },\n      rotate: { x: TAU/4 },\n    },\n  }[ faceName ];\n};\n\n// ----- set face properties ----- //\n\nvar childProperties = [ 'color', 'stroke', 'fill', 'backface', 'front',\n  'visible' ];\nchildProperties.forEach( function( property ) {\n  // use proxy property for custom getter & setter\n  var _prop = '_' + property;\n  Object.defineProperty( Box.prototype, property, {\n    get: function() {\n      return this[ _prop ];\n    },\n    set: function( value ) {\n      this[ _prop ] = value;\n      faceNames.forEach( function( faceName ) {\n        var rect = this[ faceName + 'Rect' ];\n        var isFaceColor = typeof this[ faceName ] == 'string';\n        var isColorUnderwrite = property == 'color' && isFaceColor;\n        if ( rect && !isColorUnderwrite ) {\n          rect[ property ] = value;\n        }\n      }, this );\n    },\n  });\n});\n\nreturn Box;\n\n}));\n","var glob = {\n    gridWidth: 25,\n    squareWidth: 18,\n    squareDist: 18,\n    nLayers: 10,\n    layerWidth: 64,\n    animScale: 0.2,\n    updateRate: 200,\n    paused: false,\n    frameNum: 0,\n};\nexport default glob;\n","import g from './globals';\nvar neighbors = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n];\nvar Life = (function () {\n    function Life() {\n        var _this = this;\n        this.repopulate = function () {\n            var populationAmt = Math.random() * 0.25 + 0.05;\n            for (var i = 0; i < g.gridWidth; i++) {\n                for (var j = 0; j < g.gridWidth; j++) {\n                    var val = Math.random() < populationAmt ? 1 : 0;\n                    _this.rows[i][j] = val;\n                }\n            }\n        };\n        this.update = function () {\n            var newRows = [];\n            var _loop_1 = function (i) {\n                var newRow = [];\n                var _loop_2 = function (j) {\n                    var neighborsAlive = 0;\n                    neighbors.forEach(function (nbr) {\n                        var di = nbr[0], dj = nbr[1];\n                        if (_this.rows[(i + g.gridWidth + di) % g.gridWidth][(j + g.gridWidth + dj) % g.gridWidth]) {\n                            neighborsAlive++;\n                        }\n                    });\n                    var curVal = _this.rows[i][j];\n                    if ((curVal === 0 && neighborsAlive === 3)\n                        || (curVal > 0 && (neighborsAlive === 2 || neighborsAlive === 3))) {\n                        newRow.push(_this.rows[i][j] + 1);\n                    }\n                    else {\n                        newRow.push(0);\n                    }\n                };\n                for (var j = 0; j < g.gridWidth; j++) {\n                    _loop_2(j);\n                }\n                newRows.push(newRow);\n            };\n            for (var i = 0; i < g.gridWidth; i++) {\n                _loop_1(i);\n            }\n            _this.rows = newRows;\n        };\n        var populationAmt = 0.25;\n        this.rows = [];\n        for (var i = 0; i < g.gridWidth; i++) {\n            var row = [];\n            for (var j = 0; j < g.gridWidth; j++) {\n                row.push(Math.random() < populationAmt ? 1 : 0);\n            }\n            this.rows.push(row);\n        }\n    }\n    return Life;\n}());\nexport default Life;\n","import './assets/styles.css';\nimport * as Zdog from 'zdog';\nvar canvas = document.getElementById('canvas');\ncanvas.width = document.body.clientWidth;\ncanvas.height = document.body.clientHeight;\nimport Life from './life';\nimport g from './globals';\nvar illo = new Zdog.Illustration({\n    element: '#canvas',\n    rotate: { x: 2.6, y: 2.1, z: 0 },\n    dragRotate: true,\n});\nvar getRectColorByCellValue = function (cellValue) {\n    if (!cellValue)\n        return '';\n    var hue = (g.frameNum * 7) % 360;\n    var lMax = 68;\n    var lMin = 30;\n    var lInc = (lMax - lMin) / 4;\n    var lightness = cellValue < 5\n        ? lMin + (cellValue - 1) * lInc\n        : lMax;\n    return \"hsl(\" + hue + \",70%,\" + lightness + \"%)\";\n};\nvar getRectSizeByLayer = function (layer) {\n    return ((g.nLayers - layer) / g.nLayers) * g.squareWidth;\n};\nvar createSquareGrid = function (layer) {\n    var squares = [];\n    var anchor = new Zdog.Anchor({\n        addTo: illo,\n        translate: { y: (layer - (g.nLayers / 2)) * g.layerWidth },\n        rotate: { y: layer * 0.06 }\n    });\n    var recenter = g.squareWidth * g.gridWidth / 2;\n    for (var i = 0; i < g.gridWidth; i++) {\n        var row = [];\n        for (var j = 0; j < g.gridWidth; j++) {\n            var width = getRectSizeByLayer(layer);\n            var square = new Zdog.Rect({\n                addTo: anchor,\n                width: width,\n                height: width,\n                stroke: 3,\n                fill: true,\n                color: '#CCBBFF',\n                visible: false,\n                rotate: { x: Zdog.TAU / 4 },\n                translate: {\n                    x: i * g.squareDist - recenter,\n                    z: j * g.squareDist - recenter,\n                },\n            });\n            row.push(square);\n        }\n        squares.push(row);\n    }\n    return squares;\n};\nvar layers = [];\nfor (var i = 0; i < g.nLayers; i++) {\n    layers.push(createSquareGrid(i));\n}\nvar life = new Life();\nvar shiftLayersUp = function () {\n    for (var l = g.nLayers - 1; l > 0; l--) {\n        for (var i = 0; i < g.gridWidth; i++) {\n            for (var j = 0; j < g.gridWidth; j++) {\n                layers[l][i][j].visible = layers[l - 1][i][j].visible;\n                layers[l][i][j].color = layers[l - 1][i][j].color;\n            }\n        }\n    }\n};\nvar updateFirstLayer = function () {\n    var firstLayer = layers[0];\n    for (var i = 0; i < g.gridWidth; i++) {\n        for (var j = 0; j < g.gridWidth; j++) {\n            var cellVal = life.rows[i][j];\n            if (cellVal === 0) {\n                firstLayer[i][j].visible = false;\n            }\n            else {\n                firstLayer[i][j].visible = true;\n                firstLayer[i][j].color = getRectColorByCellValue(cellVal);\n            }\n        }\n    }\n};\nvar updateLayers = function () {\n    life.update();\n    shiftLayersUp();\n    updateFirstLayer();\n};\nvar prevFrame = 0;\nfunction animate() {\n    if (!g.paused) {\n        g.frameNum++;\n        var now = Date.now();\n        if (now - prevFrame > g.updateRate) {\n            updateLayers();\n            prevFrame = now;\n        }\n        illo.rotate.y -= 0.01 * g.animScale;\n    }\n    illo.updateRenderGraph();\n    requestAnimationFrame(animate);\n}\nanimate();\nillo.updateRenderGraph();\ndocument.getElementById('restart').onclick = function () {\n    for (var l = 1; l < g.nLayers; l++) {\n        for (var i = 0; i < g.gridWidth; i++) {\n            for (var j = 0; j < g.gridWidth; j++) {\n                layers[l][i][j].visible = false;\n            }\n        }\n    }\n    life.repopulate();\n    if (g.paused) {\n        updateFirstLayer();\n    }\n};\nvar pauseButton = document.getElementById('pause');\npauseButton.onclick = function () {\n    pauseButton.textContent = g.paused ? 'pause' : 'resume';\n    g.paused = !g.paused;\n};\n"],"sourceRoot":""}